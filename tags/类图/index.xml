<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>类图 on Nixum Blog</title>
    <link>http://nixum.cc/tags/%E7%B1%BB%E5%9B%BE/</link>
    <description>Recent content in 类图 on Nixum Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://nixum.cc/tags/%E7%B1%BB%E5%9B%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UML</title>
      <link>http://nixum.cc/p/uml/</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://nixum.cc/p/uml/</guid>
      <description>[TOC]
类图 类图中的关系其实有多种版本的表示方法，这里仅总结自己常用的画法
访问作用域   + : public
  - : private
  # : protocted
  关系 1. 依赖（dependency） 依赖关系是五种关系中耦合最小的一种关系。
依赖在代码中主要体现为类A的某个成员函数的返回值、形参、局部变量或静态方法的调用，则表示类A引用了类B。
A &amp;mdash;-&amp;gt; B ： A use B （虚线+箭头）
 A use B 
2. 关联（Association） 在程序代码中，具有关联关系的类常常被声明为类的引用类型的成员变量。
因为 关联 是 依赖 的更详细说明， 关联 是专门描述成员属性的关系，所以依赖中所有涉及成员属性的地方更适合使用：关联、聚合、组合
单向关联：
A ——————&amp;gt; B ： A has B （实心线 + 箭头）
 A has B 
3. 聚合（Aggregation） 聚合是关联的一种特殊形式，暗含整体/部分关系，但是对方却不是唯一属于自己的那种关系。 用来表示集体与个体之间的关联关系，例如班级与学生之间存在聚合关系。
A &amp;lt;&amp;gt;—————— B : A是集体，B是个体 （实线 + 空心菱形）</description>
    </item>
    
  </channel>
</rss>
